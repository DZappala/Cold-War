template regular_font
{
	font = "EBGaramond"
	fontsize = 15
}

template tooltip_font
{
	font = "OpenSans"
	fontsize = 15
}

template fontsize_large
{
	fontsize = 20
}

template fontsize_xl
{
	fontsize = 22
}

template fontsize_xxl
{
	fontsize = 26
}

template fontsize_mega
{
	fontsize = 30
}

template fontsize_medium
{
	fontsize = 16
	using = tooltip_font
}

template fontsize_small
{
	fontsize = 14
	using = tooltip_font
}

template fontsize_xsmall
{
	fontsize = 12
	using = tooltip_font
}

template text_icon_scale
{
	fontsize = 16
}

template header_font
{
	font = "PlayfairDisplay"
}

template header_font_size
{
	fontsize = 26
}

template header_font_fancy
{
	font = "Fancy"
}

template header_font_fancy_size
{
	fontsize = 46
}

template clickthrough_blocker
{
	alwaystransparent = no
	filter_mouse = left|right
}

types Default
{
	type button = button {
		gfxtype = buttongfx
		shaderfile = "gfx/FX/pdxgui_pushbutton.shader"

		ignore_unset_buttons = right
		using = tooltip_es

		block "sound" {
			using = select_button_sound
		}
	}

	type checkbutton = checkbutton {
		block "sound" {
			using = check_button_sound
		}
		gfxtype = checkbuttongfx
		shaderfile = "gfx/FX/pdxgui_pushbutton.shader"
		using = tooltip_es
	}

	type scrollbar = scrollbar {
		min = 0
		max = 100
		step = 1
		page = 10
		value = 0
		alwaystransparent = no

		slider = {
			button = {}
		}
	}

	type progresspie = progressbar {
		gfxtype = progresspiegfx
		shaderfile = "gfx/FX/gui_progresspie.shader"
		using = tooltip_es
	}

	type minimap = minimap {
		gfxtype = minimapgfx
		shaderfile = "gfx/FX/pdxgui_default.shader"
	}

	type minimap_window = minimap_window {
		gfxtype = windowgfx
		shaderfile = "gfx/FX/pdxgui_default.shader"
	}

	type piechart = piechart {
		gfxtype = piechartgfx
		shaderfile = "gfx/FX/pdxgui_piechart.shader"
		effectname = "PieChart"
		mask = "gfx/interface/default_piechart_mask.dds"
		texture = "gfx/interface/piechart/piechart.dds"
	}

	type pieslice = pieslice {
		using = tooltip_es
	}

	type treemapslice = treemapslice {
		gfxtype = treemapslicegfx
		shaderfile = "gfx/FX/pdxgui_treemapchart.shader"
		mask = "gfx/interface/default_treemapchart_mask.dds"
		texture = "gfx/interface/treemapchart/treemapchart.dds"
		using = tooltip_es
	}

	type dropDown = dropDown {
		onselectionchanged = "[PdxGuiWidget.TriggerAnimation('on_dropdown_select')]"

		state = {
			name = on_dropdown_select
			start_sound = {
				using = sfx_select_button_sound
			}
		}
	}
}
